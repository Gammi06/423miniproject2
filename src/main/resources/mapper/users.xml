<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="site.metacoding.miniproject2.domain.users.UsersDao">
	<!-- 성유 작업 시작 -->

	<select id="findAllId"
		resultType="site.metacoding.miniproject2.dto.UsersRespDto$JoinRespDto">
		SELECT id, user_id, user_password, user_name, age, phone_number, email
		FROM users WHERE id = #{id}
	</select>

	<select id="findByCompanyId" resultType="site.metacoding.miniproject2.dto.UsersRespDto$SessionCompanyRespDto">
		select id FROM companys where users_id = #{id}
	</select>
	
	<select id="findByUserId"
		resultType="site.metacoding.miniproject2.dto.UsersRespDto$AuthRespDto">
		SELECT id, user_id, user_password, role, NULL AS companyId FROM users WHERE user_id = #{userId}
	</select>

	<select id="findById"
		resultType="site.metacoding.miniproject2.dto.UsersRespDto$UsersInfoRespDto">
		SELECT id, user_id, user_password, user_name, age, phone_number, email, position_code_id, mycareer_id, created 
		FROM users WHERE id = #{id}

	</select>

	<update id="update">
		UPDATE users SET user_name = #{userName}, email =
		#{email}, phone_number = #{phoneNumber}
		WHERE id = #{id}
	</update>

	<update id="updatePassword">
		UPDATE users SET user_password = #{userPassword}
		WHERE id = #{id}
	</update>

	<delete id="deleteById">
		DELETE FROM users WHERE id = #{id}
	</delete>

	<!--<select id="findAllUserId" resultType="site.metacoding.miniproject2.dto.UsersReqDto$AuthReqDto">
		SELECT c.id companyId, c.company_name, u.id usersId, u.user_id
		FROM companys c
		INNER JOIN users u 
		ON c.users_id = u.id
		where u.id = #{userId}
	</select>-->

	<update id="updateProfile"></update>


	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO users(user_id, user_password, user_name, age, phone_number, email, position_code_id, mycareer_id, created)
		VALUES(#{userId}, #{userPassword}, #{userName}, #{age}, #{phoneNumber}, #{email}, #{positionCodeId}, #{mycareerId}, NOW())
	</insert>
	<!-- 성유 작업 완료 -->

	<select id="findInfo"
	resultType="site.metacoding.miniproject2.dto.UsersRespDto$InfoRespDto">
		SELECT us.id, us.user_id, us.user_password,
		us.user_name, US.AGE,
		us.phone_number, us.email, us.photo,
		us.position_code_id,
		us.mycareer_id, us.created, pc.name positionCodeName
		FROM users us
		LEFT OUTER JOIN positions_code pc
		ON us.position_code_id = pc.id
		WHERE us.id = #{id}
	</select>

	<select id="findInfoCounts"
	resultType="site.metacoding.miniproject2.dto.UsersRespDto$InfoCountRespDto">
		SELECT count((IFNULL(state, 0))) AS statusAll,
		(SELECT count((IFNULL(wanted_id, 0))) AS likesCount
		FROM likes
		WHERE user_id = #{id}) likesCount,
		(SELECT count((IFNULL(company_id, 0))) AS subscribesCount
		FROM subscribes
		WHERE user_id = #{id}) subscribesCount,
		(SELECT count((IFNULL(wanted_id, 0))) AS requestsCount
		FROM requests req
		INNER JOIN resumes res
		ON req.resume_id = res.id
		WHERE res.user_id = #{id}) requestsCount
		FROM application_status appst
		INNER JOIN resumes res
		ON appst.resume_id = res.id
		WHERE res.user_id = #{id}
	</select>

	<select id="findByPosition"
		resultType="site.metacoding.miniproject2.dto.UsersRespDto$RecommendByPositionRespDto">
		SELECT @ROWNUM :=@ROWNUM+1 AS no, comrec.*
		FROM (SELECT com.id, com.company_name, com.address, com.email,
		com.company_number, com.photo,
		com.region_code_name, com.intro,
		com.years, com.member_count, com.created,
		wan.id wanted_id,
		wan.position_code_id, wan.career_code_id, wan.pay,
		wan.title,
		wan.detail, wan.view_count, wan.enddate, wan.checked
		FROM companys com
		INNER JOIN wanteds wan
		ON com.id = wan.company_id
		LEFT OUTER JOIN users us
		ON wan.position_code_id = us.position_code_id
		WHERE us.id = #{id} AND wan.enddate > NOW()
		ORDER BY RAND() LIMIT 4) comrec,
		(SELECT @ROWNUM := 0) R
	</select>

	<select id="findByPositionIfNull"
		resultType="site.metacoding.miniproject2.dto.UsersRespDto$RecommendByPositionRespDto">
		SELECT @ROWNUM :=@ROWNUM+1 AS no, comrec.*
		FROM (SELECT com.id, com.company_name, com.address, com.email,
		com.company_number, com.photo,
		com.region_code_name, com.intro,
		com.years, com.member_count, com.created,
		wan.id wanted_id,
		wan.position_code_id, wan.career_code_id, wan.pay,
		wan.title,
		wan.detail, wan.view_count, wan.enddate, wan.checked
		FROM companys com
		INNER JOIN wanteds wan
		ON com.id = wan.company_id
		WHERE wan.enddate > NOW()
		ORDER BY RAND() LIMIT 4) comrec,
		(SELECT @ROWNUM := 0) R
	</select>

	<select id="findStatusCounts"
        resultType="site.metacoding.miniproject2.dto.UsersRespDto$StatusCountRespDto">
        SELECT count((IFNULL(state, 0))) AS statusAll,
        (SELECT
        count((IFNULL(state, 0))) AS statusC
        FROM application_status appst
        INNER JOIN resumes res
        ON appst.resume_id = res.id
        WHERE res.user_id = #{id} AND state = 0 ) statusC,
        (SELECT count((IFNULL(state, 0))) AS statusFinal
        FROM application_status appst
        INNER JOIN resumes res
        ON appst.resume_id = res.id
        WHERE res.user_id = #{id} AND state = 1) statusFinal
        FROM application_status appst
        INNER JOIN resumes res
        ON appst.resume_id = res.id
        WHERE res.user_id = #{id}
    </select>

</mapper>